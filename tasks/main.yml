---

- name: install openldap server
  yum:
    name: "{{item}}"
    state: present
  with_items:
    - openldap-servers
    - openldap-clients


- name: start and enable slapd service
  service:
    name: slapd
    state: started
    enabled: yes


- name: setting slappasswd
  shell: slappasswd -s {{ldap_admin_password}}
  register: slappasswd


- name: copy ldif files to /tmp
  template:
    src: "{{item}}.j2"
    dest: /tmp/{{item}}
  with_items:
    - root.ldif
    - monitor.ldif
    - base.ldif
    - user.ldif


- name: update ldap database
  shell: ldapmodify -Y EXTERNAL -H ldapi:/// -f /tmp/{{item}}
  with_items:
    - root.ldif
    - monitor.ldif


- name: copy DB_CONFIG from DB_CONFIG.example
  shell: cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG


- name: change /var/lib/ldap owner and group to ldap
  file:
    path: /var/lib/ldap
    state: directory
    recurse: yes
    owner: ldap
    group: ldap


- name: check schema exist
  shell: ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:/// -b cn={1}cosine,cn=schema,cn=config dn
  register: schema_exist
  ignore_errors: yes


- name: add schemas
  shell: ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/{{item}}
  with_items:
    - cosine.ldif
    - nis.ldif
    - inetorgperson.ldif
  when: schema_exist.rc != 0


- name: check base content exist
  shell: ldapsearch -x -LLL -H ldap:/// -b cn=ldapusers,ou=Groups,dc=my-domain,dc=com dn
  register: base_content_exist
  ignore_errors: yes


- name: add base content
  shell: ldapadd -x -w {{ldap_admin_password}} -D "cn={{ldap_admin_id}},{{dc_string}}" -f /tmp/base.ldif
  when: base_content_exist.rc != 0


- name: check default user exist
  shell: ldapsearch -x -LLL -H ldap:/// -b uid={{ldap_user_id}},ou=People,{{dc_string}} dn
  register: default_user_exist
  ignore_errors: yes


- name: add default ldap user
  shell: ldapadd -x -w {{ldap_admin_password}} -D "cn={{ldap_admin_id}},{{dc_string}}" -f /tmp/user.ldif
  when: default_user_exist.rc != 0


- name: delete ldif files
  file:
    path: /tmp/{{item}}
    state: absent
  with_items:
    - root.ldif
    - monitor.ldif
    - base.ldif
    - user.ldif


- name: restart slapd service
  service:
    name: slapd
    state: restarted

